---
import { LOGO_IMAGE, SITE, NAV_ITEMS } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import MenuButton from "./MenuButton.astro";
import ThemeToggle from "./ThemeToggle.astro";

export interface Props {
  activeNav?: "posts" | "archives" | "tags" | "about" | "search";
}

const { activeNav } = Astro.props;
---

<header>
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            <span class="logo-text">
              <span class="logo-symbol">&lt;/&gt;</span> {SITE.title}
            </span>
          )
        }
      </a>
      <nav id="nav-menu">
        <MenuButton />
        <ul id="menu-items" class="display-none sm:flex">
          {NAV_ITEMS.map(({ href, label, id }) => (
            <li>
              <a href={href} class={activeNav === id ? "active" : ""}>
                {label}
              </a>
            </li>
          ))}
          
          {SITE.showArchives && (
            <li>
              <LinkButton
                href="/archives/"
                className={`focus-outline flex justify-center p-3 sm:p-1`}
                ariaLabel="archives"
                title="Archives"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class:list={[
                    "icon icon-tabler icons-tabler-outline !hidden sm:!inline-block",
                    activeNav === "archives" && "!stroke-skin-accent",
                  ]}
                >
                  <>
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
                    <path d="M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-10" />
                    <path d="M10 12l4 0" />
                  </>
                </svg>
                <span class:list={["sm:sr-only", activeNav === "archives" && "active"]}>
                  Archives
                </span>
              </LinkButton>
            </li>
          )}

          <li>
            <LinkButton
              href="/search/"
              className={`focus-outline p-3 sm:p-1 ${
                activeNav === "search" ? "active" : ""
              } flex`}
              ariaLabel="search"
              title="Search"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="scale-125 sm:scale-100">
                <path d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"></path>
              </svg>
              <span class="sr-only">Search</span>
            </LinkButton>
          </li>

          {SITE.lightAndDarkMode && (
            <li>
              <ThemeToggle />
            </li>
          )}
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row sm:px-4;
  }
  .top-nav-wrap {
    @apply relative flex w-full items-start justify-between p-4 sm:items-center sm:py-4;
  }
  .logo {
    @apply absolute py-1 text-xl font-semibold sm:static sm:text-xl;
  }
  .hamburger-menu {
    @apply self-end p-2 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-3 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-3 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply w-full px-4 py-2 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav .active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }

  .logo-text {
    @apply flex items-center gap-2;
  }
  .logo-symbol {
    @apply text-skin-accent;
  }
</style>

<script>
  const menuBtn = document.querySelector(".hamburger-menu");
  const menuItems = document.querySelector("#menu-items");

  menuBtn?.addEventListener("click", () => {
    menuItems?.classList.toggle("display-none");
  });

  document.addEventListener("astro:after-swap", () => {
    const menuItems = document.querySelector("#menu-items");
    menuItems?.classList.add("display-none");
  });
</script>
